{"version":3,"sources":["reportWebVitals.ts","store/appReducer.tsx","store/AppContext.tsx","components/Header/Header.tsx","store/themeContext.tsx","components/Navigation/Navigation.tsx","components/Chart/Chart.tsx","config/index.tsx","hooks/useFetch.tsx","helpers/index.ts","components/Chart/LineChart.tsx","components/Select/Schools.tsx","components/Select/Camps.tsx","components/Select/Countries.tsx","components/SchoolDetails/SchoolDetails.tsx","components/Loading/Loading.tsx","pages/Home/Home.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","selectedCountry","updateCountry","selectedCamp","updateCamp","camp","basedOnCountry","selectedSchool","updateSchool","school","basedOnCamp","themeMode","updateTheme","theme","loading","updateLoading","status","appReducer","state","action","type","payload","Object","objectSpread","country","Error","concat","AppContext","createContext","AppProvider","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","a","createElement","Provider","value","Header","setThemeMode","mode","_useContext","useContext","Box","sx","flexGrow","AppBar","position","backgroundColor","marginBottom","Toolbar","Typography","variant","component","FormGroup","FormControlLabel","control","Switch","defaultChecked","onChange","event","target","checked","aria-label","label","Navigation","Grid","className","container","spacing","item","xs","Countries","Camps","Schools","Chart","Chart_LineChart","Config","dataURL","filterData","data","filter","index","findIndex","second","useFetch","_useState","useState","_useState2","setData","_useState3","_useState4","error","setError","getAPIData","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","resData","wrap","_context","prev","next","fetch","sent","json","allData","countries","camps","schools","t0","abrupt","stop","apply","this","arguments","useEffect","groupSchoolsByMonth","months","updatedData","forEach","entry","accentColorList","Array","fill","Math","floor","random","toString","schoolMonthsData","from","indexOf","month","lessons","push","borderWidth","borderColor","tension","spanGaps","pointHitRadius","pointRadius","filterChartData","filterSchools","key","Map","map","values","toConsumableArray","removeDuplicates","record","condition","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","LineChart","navigate","useNavigate","_useFetch","labels","datasets","chartData","setChartData","getData","keys","length","Fragment","react_chartjs_2_dist","options","onClick","element","datasetIndex","plugins","title","display","text","legend","usePointStyle","SchoolsList","FormControl","fullWidth","InputLabel","id","Select","labelId","MenuItem","CampsList","CountriesList","SchoolDetails","currentSchoolDetails","setCurrentSchoolDetails","console","log","getSchoolDetails","Link","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","toLowerCase","replace","align","TableBody","&:last-child td, &:last-child th","border","Loading","react","width","margin","LinearProgress","Home","createTheme","palette","currentTheme","setCurrentTheme","setTimeout","ThemeProvider","CssBaseline","components_Loading_Loading","components_Header_Header","components_Navigation_Navigation","dist","react_router_dist","path","components_Chart_Chart","components_SchoolDetails_SchoolDetails","ReactDOM","createRoot","document","getElementById","render","StrictMode","store_AppContext","pages_Home_Home"],"mappings":"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","file":"static/js/main.0266b0da.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\n\tselectedCountry: \"Egypt\",\n\tupdateCountry: (updateCountry: string) => {},\n\tselectedCamp: \"\",\n\tupdateCamp: (camp: string, basedOnCountry: boolean) => {},\n\tselectedSchool: \"\",\n\tupdateSchool: (school: string, basedOnCamp: boolean) => {},\n\tthemeMode: \"light\",\n\tupdateTheme: (theme: string) => {},\n\tloading: true,\n\tupdateLoading: (status: boolean) => {}\n};\n\nexport type ChartType = typeof initialState;\n\nconst appReducer = (state: ChartType, action: any): any => {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\t\tcase \"UPDATE_COUNTRY\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedCountry: payload.country,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"UPDATE_CAMP\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedCamp: payload.camp,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"UPDATE_SCHOOL\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tselectedSchool: payload.school,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"UPDATE_THEME\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tthemeMode: payload.themeMode,\n\t\t\t};\n\t\t\tbreak;\n\t\tcase \"UPDATE_LOADING\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: payload.loading,\n\t\t\t};\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error(`${type} is not a valid reducer type`);\n\t}\n};\n\nexport default appReducer;\n","import React, { createContext, useReducer } from \"react\";\nimport { default as appReducer, initialState, ChartType } from \"./appReducer\";\nexport const AppContext = createContext(initialState);\nconst AppProvider = ({ children }: any) => {\n\tconst [state, dispatch] = useReducer(appReducer, initialState);\n\tconst updateCountry = (country: string): void => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_COUNTRY\",\n\t\t\tpayload: {\n\t\t\t\t...state,\n\t\t\t\tcountry: country,\n\t\t\t},\n\t\t});\n\t};\n\tconst updateCamp = (camp: string): void => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_CAMP\",\n\t\t\tpayload: {\n\t\t\t\t...state,\n\t\t\t\tcamp: camp,\n\t\t\t},\n\t\t});\n\t};\n\tconst updateSchool = (school: string): void => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_SCHOOL\",\n\t\t\tpayload: {\n\t\t\t\t...state,\n\t\t\t\tschool: school,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst updateTheme = (themeMode: string): void => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_THEME\",\n\t\t\tpayload: {\n\t\t\t\t...state,\n\t\t\t\tthemeMode: themeMode,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst updateLoading = (status: boolean): void => {\n\t\tdispatch({\n\t\t\ttype: \"UPDATE_LOADING\",\n\t\t\tpayload: {\n\t\t\t\t...state,\n\t\t\t\tloading: status,\n\t\t\t},\n\t\t});\n\t};\n\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={\n\t\t\t\t{\n\t\t\t\t\tselectedCountry: state.selectedCountry,\n\t\t\t\t\tselectedSchool: state.selectedSchool,\n\t\t\t\t\tselectedCamp: state.selectedCamp,\n\t\t\t\t\tupdateSchool: updateSchool,\n\t\t\t\t\tupdateCamp: updateCamp,\n\t\t\t\t\tupdateCountry: updateCountry,\n\t\t\t\t\tthemeMode: state.themeMode,\n\t\t\t\t\tupdateTheme: updateTheme,\n\t\t\t\t\tloading: state.loading,\n\t\t\t\t\tupdateLoading: updateLoading,\n\t\t\t\t} as any\n\t\t\t}\n\t\t>\n\t\t\t{children}\n\t\t</AppContext.Provider>\n\t);\n};\nexport default AppProvider;\n","import React, { useContext } from \"react\";\nimport {\n\tAppBar,\n\tBox,\n\tToolbar,\n\tTypography,\n\tFormControlLabel,\n\tFormGroup,\n\tSwitch,\n} from \"@mui/material\";\nimport { AppContext } from \"../../store\";\n\nconst Header: React.FC = () => {\n\t// store and update theme mode\n\tconst { themeMode, updateTheme } = useContext(AppContext);\n\tconst handleChange = (event: any) => {\n\t\tupdateTheme(event.target.checked ? \"light\" : \"dark\");\n\t};\n\treturn (\n\t\t<Box sx={{ flexGrow: 1 }}>\n\t\t\t<AppBar\n\t\t\t\tposition=\"static\"\n\t\t\t\tsx={{\n\t\t\t\t\tbackgroundColor: \"#3e3e3e\",\n\t\t\t\t\tmarginBottom: '1em'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography\n\t\t\t\t\t\tvariant=\"h6\"\n\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\tsx={{ flexGrow: 1 }}\n\t\t\t\t\t>\n\t\t\t\t\t\tNumber Of Lessons\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\taria-label=\"login switch\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel={themeMode == \"dark\" ? \"Dark\" : \"Light\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</Box>\n\t);\n};\n\nexport default Header;\n","import React, { createContext } from \"react\";\nimport { PaletteOptions } from \"@mui/material\";\n\n/* Theme Context Interface */\ninterface IThemeContext {\n\tthemeMode: PaletteOptions;\n\tsetThemeMode: (mode: string) => void;\n}\n\nconst themeModeContext = createContext<IThemeContext>({\n\tthemeMode: \"dark\" as PaletteOptions,\n\tsetThemeMode: (mode) => {},\n});\nexport default themeModeContext;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { SchoolsList, CampsList, CountriesList } from \"./../\";\n\nconst Navigation: React.FC = () => {\n\treturn (\n\t\t<Grid\n\t\t\tclassName=\"section-container\"\n\t\t\tsx={{ flexGrow: 1 }}\n\t\t\tcontainer\n\t\t\tspacing={4}\n\t\t>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<CountriesList />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<CampsList />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<SchoolsList />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { LineChart } from \"./../\";\n\nconst Chart: React.FC = () => {\n\treturn (\n\t\t<Grid className=\"section-container\" container spacing={2}>\n\t\t\t<Grid item xs={11}>\n\t\t\t\t<LineChart />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Chart;\n","const Config = {\n\tdataURL:\n\t\t\"https://raw.githubusercontent.com/abdelrhman-arnos/analysis-fe-challenge/master/data.json\",\n};\nexport default Config;\n","import { useEffect, useState } from \"react\";\nimport Config from \"./../config\";\n\n/* Filter data fetched from the api */\nconst filterData = (data: [], type: string) => {\n\treturn data.filter((item: any, index: number) => {\n\t\treturn (\n\t\t\tindex === data.findIndex((second) => item[type] === second[type])\n\t\t);\n\t});\n};\n/* Fetch charts data */\nconst useFetch = () => {\n\t// Store data and updated countries, schools and camps list\n\tconst [data, setData] = useState<any>({});\n\n\t// Store error message\n\tconst [error, setError] = useState<any>();\n\n\t// Fetch data\n\tconst getAPIData = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(Config.dataURL);\n\t\t\tconst resData = await response.json();\n\n\t\t\t// Update schools, camps and countries\n\t\t\tsetData({\n\t\t\t\t...data,\n\t\t\t\tallData: resData,\n\t\t\t\tcountries: filterData(resData, \"country\"),\n\t\t\t\tcamps: filterData(resData, \"camp\"),\n\t\t\t\tschools: filterData(resData, \"school\"),\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn setError(err);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetAPIData();\n\t}, []);\n\treturn { data, error };\n};\nexport default useFetch;\n","export const generateColor = () => {\n\treturn `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n};\n\n// Remove duplicated based on object key\nexport const removeDuplicates = (data: any, key: string) => {\n\tconst updatedData = new Map(\n\t\tdata.map((item: any) => [item[key], item])\n\t).values();\n\treturn [...(updatedData as any)];\n};\n\n// Group schools by month\nexport const groupSchoolsByMonth = (schools: any): [] => {\n\tconst months = [\n\t\t\"Jan\",\n\t\t\"Feb\",\n\t\t\"March\",\n\t\t\"Apr\",\n\t\t\"May\",\n\t\t\"Jun\",\n\t\t\"Jul\",\n\t\t\"Aug\",\n\t\t\"Sep\",\n\t\t\"Oct\",\n\t\t\"Nov\",\n\t\t\"Dec\",\n\t];\n\tconst updatedData: any = [];\n\n\t// loop through data, and create an entry with school as a label\n\tschools.forEach((entry: any) => {\n\t\t// Accent color\n\t\tlet accentColorList = Array(2).fill(generateColor());\n\n\t\t// Filter school data per months\n\t\tconst schoolMonthsData = Array.from(Array(12).fill(0));\n\t\tlet monthIndex = months.indexOf(entry.month);\n\t\tschoolMonthsData[monthIndex] = entry.lessons;\n\t\tupdatedData.push({\n\t\t\tlabel: entry.school,\n\t\t\tdata: schoolMonthsData,\n\t\t\tbackgroundColor: accentColorList,\n\t\t\tborderWidth: \"2\",\n\t\t\tborderColor: accentColorList[0],\n\t\t\ttension: 0.2,\n\t\t\tspanGaps: true,\n\t\t\tpointHitRadius: \"2\",\n\t\t\tpointRadius: \"2\",\n\t\t});\n\t});\n\n\treturn updatedData;\n};\n// Filter data based on country\nexport const filterChartData = (\n\tdata: [],\n\tcountry: string,\n\tcamp: string,\n\tschool: string\n): object => {\n\tconst getAllSchools = data.filter((record: any) => {\n\t\tlet condition = true;\n\t\tif (country !== \"\") {\n\t\t\tcondition = record.country === country;\n\t\t}\n\t\tif (camp !== \"\") {\n\t\t\tcondition = record.camp === camp;\n\t\t}\n\t\tif (school !== \"\" && school !== \"all\") {\n\t\t\tcondition = record.school === school;\n\t\t}\n\t\treturn condition;\n\t});\n\tconst filterSchools = removeDuplicates(getAllSchools, \"school\");\n\treturn groupSchoolsByMonth(filterSchools);\n};\n\n// Get school details\nexport const getSchoolDetails = (\n\tdata: [],\n\tcountry: string | null,\n\tcamp: string | null,\n\tschool: string | null\n): any => {\n\tconsole.log(school);\n\tconst getAllSchools = data.filter((record: any) => {\n\t\treturn record.school === school;\n\t});\n\treturn getAllSchools;\n};\n","import React, {  useContext, useEffect, useState } from \"react\";\nimport {\n\tChart as ChartJS,\n\tCategoryScale,\n\tLinearScale,\n\tPointElement,\n\tLineElement,\n\tTitle,\n\tTooltip,\n\tLegend,\n} from \"chart.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport { useFetch } from \"../../hooks\";\nimport { AppContext } from \"./../../store\";\nimport { filterChartData } from \"./../../helpers\";\n\n// Register Chart Types\nChartJS.register(\n\tCategoryScale,\n\tLinearScale,\n\tPointElement,\n\tLineElement,\n\tTitle,\n\tTooltip,\n\tLegend\n);\n\n// Line chart component\nconst LineChart: React.FC = () => {\n\tconst navigate = useNavigate();\n\t// Get list of data, current country school and camp\n\tconst { data, error } = useFetch();\n\tconst {\n\t\tselectedCountry,\n\t\tselectedCamp,\n\t\tselectedSchool,\n\t\tupdateSchool,\n\t} = useContext(AppContext);\n\tconst [chartData, setChartData] = useState<any>({\n\t\tlabels: [\n\t\t\t\"Jan\",\n\t\t\t\"Feb\",\n\t\t\t\"March\",\n\t\t\t\"Apr\",\n\t\t\t\"May\",\n\t\t\t\"Jun\",\n\t\t\t\"Jul\",\n\t\t\t\"Aug\",\n\t\t\t\"Sep\",\n\t\t\t\"Oct\",\n\t\t\t\"Nov\",\n\t\t\t\"Dec\",\n\t\t],\n\t\tdatasets: [],\n\t});\n\t// Update filtered chart data based on county, camp or school change\n\tuseEffect(() => {\n\t\tconst getData = Object.keys(data).length\n\t\t\t? filterChartData(\n\t\t\t\t\tdata.allData,\n\t\t\t\t\tselectedCountry,\n\t\t\t\t\tselectedCamp,\n\t\t\t\t\tselectedSchool\n\t\t\t  )\n\t\t\t: [];\n\t\tsetChartData({ ...chartData, datasets: getData });\n\t}, [selectedCountry, selectedCamp, selectedSchool , data]);\n\n\treturn (\n\t\t<>\n\t\t\t{error || data.length < 1 ? (\n\t\t\t\t<span>Error loading chart data</span>\n\t\t\t) : (\n\t\t\t\t<Line\n\t\t\t\t\tdata={chartData}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\tonClick: (event, element: any) => {\n\t\t\t\t\t\t\tif (element.length) {\n\t\t\t\t\t\t\t\t// Get clicked school data\n\t\t\t\t\t\t\t\tlet index = element[0].datasetIndex;\n\t\t\t\t\t\t\t\tlet school = chartData.datasets[index];\n\n\t\t\t\t\t\t\t\t// Update selected school\n\t\t\t\t\t\t\t\tupdateSchool(school.label, false);\n\n\t\t\t\t\t\t\t\t// Navigate to details page\n\t\t\t\t\t\t\t\tnavigate(\"/details\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tplugins: {\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\ttext: \"Click to toggle schools\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tlegend: {\n\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\tposition: \"right\",\n\t\t\t\t\t\t\t\tlabels: {\n\t\t\t\t\t\t\t\t\tusePointStyle: true,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\nexport default LineChart;\n","import React, { useContext, useState } from \"react\";\nimport { InputLabel, MenuItem, FormControl, Select } from \"@mui/material\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\nimport { useFetch } from \"./../../hooks\";\nimport { AppContext } from \"../../store\";\n\nconst SchoolsList: React.FC = () => {\n\t// Get list of schools\n\tconst { data, error } = useFetch();\n\tconst { schools } = data;\n\n\t// Get current camp, school\n\tconst { selectedSchool, updateSchool } = useContext(AppContext);\n\tconst handleChange = (event: SelectChangeEvent) => {\n\t\tupdateSchool(event.target.value, true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{!schools || error ? (\n\t\t\t\t<div>Loading</div>\n\t\t\t) : (\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tSelect School\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tvalue={selectedSchool}\n\t\t\t\t\t\tlabel=\"School\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value={\"all\"}>Show All</MenuItem>\n\t\t\t\t\t\t{schools.length ? (\n\t\t\t\t\t\t\tschools.map((item: any) => (\n\t\t\t\t\t\t\t\t<MenuItem key={item.id} value={item.school}>\n\t\t\t\t\t\t\t\t\t{item.school}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<MenuItem></MenuItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default SchoolsList;\n","import React, { useContext, useEffect } from \"react\";\nimport { InputLabel, MenuItem, FormControl, Select } from \"@mui/material\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\nimport { useFetch } from \"./../../hooks\";\nimport { AppContext } from \"../../store\";\n\nconst CampsList: React.FC = () => {\n\t// Get list of camps\n\tconst { data, error } = useFetch();\n\tconst { camps } = data;\n\n\t// Fetch camps based on current selected country\n\tconst { selectedCamp, updateCamp } = useContext(AppContext);\n\t// Set selected camp\n\tconst handleChange = (event: SelectChangeEvent) => {\n\t\tupdateCamp(event.target.value, true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{!camps || error ? (\n\t\t\t\t<div>Loading</div>\n\t\t\t) : (\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tSelect Camp\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tvalue={selectedCamp}\n\t\t\t\t\t\tlabel=\"Camp\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem>Select Camp</MenuItem>\n\t\t\t\t\t\t{camps.length ? (\n\t\t\t\t\t\t\tcamps.map((item: any) => (\n\t\t\t\t\t\t\t\t<MenuItem key={item.id} value={item.camp}>\n\t\t\t\t\t\t\t\t\t{item.camp}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<MenuItem></MenuItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default CampsList;\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { InputLabel, MenuItem, FormControl, Select } from \"@mui/material\";\nimport { SelectChangeEvent } from \"@mui/material/Select\";\nimport { useFetch } from \"./../../hooks\";\nimport { AppContext } from \"../../store\";\n\nconst CountriesList: React.FC = () => {\n\t// Fetch Countries List\n\tconst { data, error } = useFetch();\n\tconst { countries } = data;\n\n\t// Set selected country\n\tconst { selectedCountry, updateCountry } = useContext(AppContext);\n\n\t// Update current country when select changes\n\tconst handleChange = (event: SelectChangeEvent) => {\n\t\tupdateCountry(event.target.value as string);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{!countries || error ? (\n\t\t\t\t<div>Loading</div>\n\t\t\t) : (\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tSelect Country\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tvalue={selectedCountry}\n\t\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t{countries.length ? (\n\t\t\t\t\t\t\tcountries.map((item: any) => (\n\t\t\t\t\t\t\t\t<MenuItem key={item.id} value={item.country}>\n\t\t\t\t\t\t\t\t\t{item.country}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<MenuItem></MenuItem>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default CountriesList;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Grid } from \"@mui/material\";\nimport {\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tLink,\n\tPaper,\n} from \"@mui/material\";\nimport { useFetch } from \"../../hooks\";\nimport { getSchoolDetails } from \"../../helpers\";\nimport { AppContext } from \"./../../store\";\n\nconst SchoolDetails: React.FC = () => {\n\tconst { data, error } = useFetch();\n\tconst navigate = useNavigate();\n\n\tconst { selectedCountry, selectedCamp, selectedSchool } = useContext(\n\t\tAppContext\n\t);\n\tconst [currentSchoolDetails, setCurrentSchoolDetails] = useState<[]>([]);\n\n\tuseEffect(() => {\n\t\tconst getData = Object.keys(data).length\n\t\t\t? getSchoolDetails(\n\t\t\t\t\tdata.allData,\n\t\t\t\t\tselectedCountry,\n\t\t\t\t\tselectedCamp,\n\t\t\t\t\tselectedSchool\n\t\t\t  )\n\t\t\t: [];\n\t\tsetCurrentSchoolDetails(getData);\n\t}, [data]);\n\n\t// Get current school details based con selectedCountry and selectedCamp\n\treturn (\n\t\t<Grid className=\"section-container\" container spacing={2}>\n\t\t\t<Grid item xs={8}>\n\t\t\t\t<Link\n\t\t\t\t\tcomponent=\"button\"\n\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tnavigate(\"/\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tGo back\n\t\t\t\t</Link>\n\t\t\t\t{currentSchoolDetails.length ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h4 className=\"section-heading\">\n\t\t\t\t\t\t\t<b>{selectedSchool}</b> Details\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\tsx={{ minWidth: 650 }}\n\t\t\t\t\t\t\t\taria-label=\"simple table\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t\t\t{[\n\t\t\t\t\t\t\t\t\t\t\t\"Country\",\n\t\t\t\t\t\t\t\t\t\t\t\"Camp\",\n\t\t\t\t\t\t\t\t\t\t\t\"# Of Lessons\",\n\t\t\t\t\t\t\t\t\t\t\t\"Month\",\n\t\t\t\t\t\t\t\t\t\t].map((item) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(\" \", \"\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\talign=\"left\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t\t\t{currentSchoolDetails.map((school: any) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<TableRow\n\t\t\t\t\t\t\t\t\t\t\t\tkey={school.id}\n\t\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"&:last-child td, &:last-child th\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{school.country}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{school.camp}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{school.lessons}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{school.month}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</TableContainer>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<p>Please select a school</p>\n\t\t\t\t)}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\nexport default SchoolDetails;\n","import * as React from \"react\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Box from \"@mui/material/Box\";\n\nconst Loading: React.FC = () => {\n\treturn (\n\t\t<Box\n\t\t\tsx={{\n\t\t\t\twidth: '200px' ,\n\t\t\t\tmargin: '50vh auto auto auto'\n\t\t\t}}\n\t\t>\n\t\t\t<LinearProgress />\n\t\t</Box>\n\t);\n};\nexport default Loading;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Grid, CssBaseline } from \"@mui/material\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n\tHeader,\n\tNavigation,\n\tChart,\n\tLoading,\n\tSchoolDetails,\n} from \"./../../components\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { AppContext } from \"../../store\";\nimport \"./../../assets/css/App.css\";\n\n/* Home Page Container */\nconst Home: React.FC = () => {\n\t// Get current theme mode: string\n\tconst { themeMode, loading, updateLoading } = useContext(AppContext);\n\tconst [currentTheme, setCurrentTheme] = useState<any>(\n\t\tcreateTheme({\n\t\t\tpalette: {\n\t\t\t\tmode: themeMode as any,\n\t\t\t},\n\t\t})\n\t);\n\n\t// Update theme when themeMode value changes\n\tuseEffect(() => {\n\t\treturn setCurrentTheme(\n\t\t\tcreateTheme({\n\t\t\t\tpalette: {\n\t\t\t\t\tmode: themeMode as any,\n\t\t\t\t},\n\t\t\t})\n\t\t);\n\t}, [themeMode]);\n\n\t// Remove loading screen on mount\n\tuseEffect(() => {\n\t\t// timeout is used for testing purposes, could be removed on production\n\t\tsetTimeout(() => {\n\t\t\tupdateLoading(false);\n\t\t}, 1000);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ThemeProvider theme={currentTheme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t{loading ? (\n\t\t\t\t\t<Loading />\n\t\t\t\t) : (\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Navigation />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t\t\t<Route path=\"/\" element={<Chart />} />\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath=\"/details\"\n\t\t\t\t\t\t\t\t\t\telement={<SchoolDetails />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Routes>\n\t\t\t\t\t\t\t</Router>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t)}\n\t\t\t</ThemeProvider>\n\t\t</>\n\t);\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Home } from \"./pages\";\nimport { AppProvider } from \"./store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"app\") as HTMLElement);\nroot.render(\n\t<React.StrictMode>\n\t\t<AppProvider>\n\t\t\t<Home />\n\t\t</AppProvider>\n\t</React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}